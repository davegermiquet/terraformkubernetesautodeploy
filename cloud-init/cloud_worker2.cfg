#cloud-config
system_info:
  default_user:
    name: "david"
    plain_text_passwd: "test1234"
    lock_passwd: false
    groups: ["wheel"]
    ssh_authorized_keys:
      - enter key here


ssh_authorized_keys:
  - enter key here

ssh_pwauth: True
ssh_deletekeys: false
ssh_keys:
  ed25519_private: |
    -----BEGIN OPENSSH PRIVATE KEY-----
    -----END OPENSSH PRIVATE KEY-----



ssh_pwauth: True

packages:
  - chrony
  - firewalld
  - auditsudo
  - bash-completion
  - kexec-tools
  - gnupg2
  - dnf-utils

yum_repos:
  kubernetes:
    name: Kubernetes
    baseurl: https://pkgs.k8s.io/core:/stable:/v1.30/rpm/
    enabled: true
    gpgcheck: true
    gpgkey: https://pkgs.k8s.io/core:/stable:/v1.30/rpm/repodata/repomd.xml.key
runcmd:
  - nmcli con del "System eth0"
  - nmcli con add con-name "static-eth0" ifname eth0 type ethernet ip4 192.168.30.7/24 gw4 192.168.30.1
  - nmcli con mod "static-eth0" ipv4.dns "192.168.30.1"
  - nmcli con up "static-eth0"
  - hostnamectl hostname worker2
  - modprobe overlay
  - modprobe br_netfilter
  - |
    tee /etc/modules-load.d/k8s.conf <<EOF
    overlay
    br_netfilter
    EOF
  - |
    tee /etc/sysctl.d/kubernetes.conf <<EOT
    net.bridge.bridge-nf-call-ip6tables = 1
    net.bridge.bridge-nf-call-iptables = 1
    net.ipv4.ip_forward = 1
    EOT
  - sysctl -p
  - sysctl --system
  - echo 192.168.30.5 master  >> /etc/hosts
  - echo 192.168.30.7 worker2  >> /etc/hosts
  - dnf config-manager --add-repo https://download.docker.com/linux/rhel/docker-ce.repo
  - dnf makecache
  - dnf install -y firewalld
  - systemctl enable firewalld --now
  - dnf install -y containerd.io
  - dnf install -y {kubelet,kubeadm,kubectl} --disableexcludes=kubernetes
  - rm /etc/containerd/config.toml
  - containerd config default > /etc/containerd/config.toml 
  - sed -i 's/SystemdCgroup \= false/SystemdCgroup \= true/g' /etc/containerd/config.toml
  - sed -i --follow-symlinks 's/SELINUX=enforcing/SELINUX=permissive/g' /etc/sysconfig/selinux
  - firewall-cmd --permanent --add-port=6443/tcp
  - firewall-cmd --permanent --add-port=2379-2380/tcp
  - firewall-cmd --permanent --add-port=10250/tcp
  - firewall-cmd --permanent --add-port=10251/tcp
  - firewall-cmd --permanent --add-port=10259/tcp
  - firewall-cmd --permanent --add-port=10257/tcp
  - firewall-cmd --permanent --add-port=179/tcp
  - firewall-cmd --permanent --add-port=4789/udp
  - firewall-cmd --permanent --add-port=30000-32767/tcp
  - firewall-cmd --reload
  - systemctl enable containerd --now
  - systemctl enable kubelet --now
  - while true; do  if [[ "`ssh -i /etc/ssh/ssh_host_ed25519_key -o StrictHostKeyChecking=no david@master cat /tmp/done`" == "true" ]] ; then break ; fi ; sleep 3; done 
  - echo "Done"
  - ssh -i /etc/ssh/ssh_host_ed25519_key  -o StrictHostKeyChecking=no david@master  kubeadm token create --print-join-command > /tmp/output.sh
  - sh /tmp/output.sh > /tmp/output.connect
